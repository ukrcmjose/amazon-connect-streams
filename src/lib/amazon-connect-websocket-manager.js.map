{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/utils.js","webpack:///./src/constants.js","webpack:///./src/log.js","webpack:///./src/webSocketManager.js","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./src/index.js","webpack:///(webpack)/buildin/global.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utils","premise","message","Error","assertTrue","undefined","_typeof","sprintf","length","Array","isArray","obj","constructor","apply","wsRegex","RegExp","validWSUrl","wsUrl","test","getSubscriptionResponse","routeKey","isSuccess","topicList","topic","content","status","topics","assertIsObject","isObject","addJitter","base","maxJitter","arguments","Math","min","sign","random","floor","isNetworkOnline","navigator","onLine","LOGS_DESTINATION","ROUTE_KEY","CONN_STATE","Logger","data","LogLevel","DEBUG","INFO","WARN","ERROR","LogManagerImpl","_classCallCheck","this","updateLoggerConfig","consoleLoggerWrapper","createConsoleLogger","level","logStatement","hasClientLogger","_clientLogger","debug","info","warn","error","_level","options","prefix","_logsDestination","LoggerWrapperImpl","inputConfig","config","logger","LoggerWrapper","_this","_possibleConstructorReturn","_getPrototypeOf","_len","args","_key","_log","_len2","_key2","_len3","_key3","_len4","_key4","LogManager","isLevelEnabled","writeToClientLogger","_shouldLog","_convertToSingleStatement","_writeToClientLogger","index","arg","_convertToString","isString","isFunction","toString","toStringResult","JSON","stringify","console","__webpack_exports__","WebSocketManagerObject","WebSocketManager","getLogger","online","webSocket","primary","secondary","reconnectConfig","reconnectWebSocket","websocketInitFailed","exponentialBackOffTime","exponentialTimeoutHandle","lifeTimeTimeoutHandle","webSocketInitCheckerTimeoutId","connState","metrics","connectWebSocketRetryCount","connectionAttemptStartTime","noOpenConnectionsTimestamp","heartbeatConfig","pendingResponse","intervalHandle","callbacks","initFailure","Set","getWebSocketTransport","subscriptionUpdate","subscriptionFailure","Map","allMessage","connectionGain","connectionLost","connectionOpen","connectionClose","webSocketConfig","connConfig","promiseHandle","promiseCompleted","topicSubscription","subscribed","pending","subscriptionHistory","topicSubscriptionConfig","responseCheckIntervalId","requestCompleted","reSubscribeIntervalId","consecutiveFailedSubscribeAttempts","consecutiveNoResponseRequest","invalidSendMessageRouteKeys","networkConnectivityChecker","setInterval","ws","getDefaultWebSocket","isWebSocketState","WebSocket","CLOSING","CLOSED","getWebSocketConnConfig","invokeCallbacks","response","forEach","callback","getWebSocketStates","readyState","CONNECTING","OPEN","printWebSocketState","event","webSocketStateCode","isWebSocketOpen","isWebSocketClosed","isDefaultWebSocketOpen","sendHeartBeat","clearInterval","send","createWebSocketPayload","resetWebSocketState","clearTimeout","resetSubscriptions","resetMetrics","webSocketOnOpen","now","Date","connectionEstablishedTime","timeToConnect","timeWithoutConnection","openTimestamp","size","closeSpecificWebSocket","add","clear","subscribePendingTopics","setTimeout","webSocketTransport","transportLifeTimeInSeconds","webSocketOnError","webSocketOnMessage","parse","topicName","has","from","reason","close","closeWebSocket","retryWebSocketInitialization","waitTime","urlConnValidTime","initWebSocket","terminateWebSocketManager","validWebSocketConnConfig","isNonEmptyString","url","then","webSocketConnectionFailed","getNewWebSocket","addEventListener","closeTimestamp","connectionDuration","code","webSocketOnClose","init","transportHandle","onInitFailure","cb","onConnectionOpen","onConnectionClose","onConnectionGain","onConnectionLost","onSubscriptionUpdate","onSubscriptionFailure","onMessage","assertNotNull","set","onAllMessage","subscribeTopics","assertIsList","sendMessage","payload","setGlobalConfig","loggerConfig","__WEBPACK_AMD_DEFINE_RESULT__","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","parse_tree","argv","k","ph","pad","pad_character","pad_length","is_positive","cursor","tree_length","output","keys","param_no","type","Function","isNaN","TypeError","parseInt","String","fromCharCode","width","precision","parseFloat","toExponential","toFixed","Number","toPrecision","substring","slice","toLowerCase","valueOf","toUpperCase","replace","pad_char","charAt","repeat","align","sprintf_format","fmt","sprintf_cache","match","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","sprintf_parse","vsprintf","concat","window","global","_webSocketManager__WEBPACK_IMPORTED_MODULE_0__","connect","g","e"],"mappings":"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","file":"amazon-connect-websocket-manager.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","import { sprintf } from \"sprintf-js\";\nconst Utils = {};\n\n/**\n * Asserts that a premise is true.\n */\nUtils.assertTrue = function(premise, message) {\n  if (!premise) {\n    throw new Error(message);\n  }\n};\n\n/**\n * Asserts that a value is not null or undefined.\n */\nUtils.assertNotNull = function(value, name) {\n  Utils.assertTrue(\n    value !== null && typeof value !== undefined,\n    sprintf(\"%s must be provided\", name || \"A value\")\n  );\n  return value;\n};\n\nUtils.isNonEmptyString = function(value) {\n  return typeof value === \"string\" && value.length > 0;\n};\n\nUtils.assertIsList = function(value, key) {\n  if (!Array.isArray(value)) {\n    throw new Error(key + \" is not an array\");\n  }\n};\n\n/**\n * Determine if the given value is a callable function type.\n * Borrowed from Underscore.js.\n */\nUtils.isFunction = function(obj) {\n  return !!(obj && obj.constructor && obj.call && obj.apply);\n};\n\nUtils.isObject = function(value) {\n  return !(typeof value !== \"object\" || value === null);\n};\n\nUtils.isString = function(value) {\n  return typeof value === \"string\";\n};\n\nUtils.isNumber = function(value) {\n  return typeof value === \"number\";\n};\n\nconst wsRegex = new RegExp(\"^(wss://)\\\\w*\");\nUtils.validWSUrl = function (wsUrl) {\n  return wsRegex.test(wsUrl);\n};\n\nUtils.getSubscriptionResponse = (routeKey, isSuccess, topicList) => {\n  return {\n    topic: routeKey,\n    content : {\n      status: isSuccess ? \"success\" : \"failure\",\n      topics: topicList\n    }\n  };\n};\n\nUtils.assertIsObject = function(value, key) {\n  if (!Utils.isObject(value)) {\n    throw new Error(key + \" is not an object!\");\n  }\n};\n\nUtils.addJitter = function (base, maxJitter = 1) {\n  maxJitter = Math.min(maxJitter, 1.0);\n  const sign = Math.random() > 0.5 ? 1 : -1;\n  return Math.floor(base + sign * base * Math.random() * maxJitter);\n};\n\nUtils.isNetworkOnline = () => navigator.onLine;\n\nexport default Utils;\n\n","\nexport const LOGS_DESTINATION = {\n  NULL: \"NULL\",\n  CLIENT_LOGGER: \"CLIENT_LOGGER\",\n  DEBUG: \"DEBUG\"\n};\n\nexport const MIN_WEBSOCKET_LIFETIME_MS = 3600000;\nexport const HEARTBEAT_INTERVAL_MS = 10000;\nexport const GET_WEBSOCKET_CONNECTION_INTERVAL_MS = 5000;\nexport const WEBSOCKET_URL_VALID_TIME_MS = 85000;\nexport const TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS = 500;\nexport const MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS = 5;\nexport const MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS = 1000;\nexport const MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE = 3;\nexport const NETWORK_CONN_CHECK_INTERVAL_MS = 250;\nexport const WEBSOCKET_REINIT_JITTER = 0.3;\nexport const WEBSOCKET_CONN_CONFIG_JITTER = 0.3;\n\nexport const ROUTE_KEY = {\n  SUBSCRIBE: \"aws/subscribe\",\n  UNSUBSCRIBE: \"aws/unsubscribe\",\n  HEARTBEAT: \"aws/heartbeat\"\n};\n\nexport const CONN_STATE = {\n  CONNECTED: \"connected\",\n  DISCONNECTED: \"disconnected\"\n};\n","import Utils from \"./utils\";\nimport { LOGS_DESTINATION } from \"./constants\";\n\n/*eslint-disable no-unused-vars*/\nclass Logger {\n  debug(data) {}\n\n  info(data) {}\n\n  warn(data) {}\n\n  error(data) {}\n}\n/*eslint-enable no-unused-vars*/\n\nconst LogLevel = {\n  DEBUG: 10,\n  INFO: 20,\n  WARN: 30,\n  ERROR: 40\n};\n\nclass LogManagerImpl {\n  constructor() {\n    this.updateLoggerConfig();\n    this.consoleLoggerWrapper = createConsoleLogger();\n  }\n\n  writeToClientLogger(level, logStatement) {\n    if (!this.hasClientLogger()) {\n      return;\n    }\n    switch (level) {\n      case LogLevel.DEBUG:\n        return this._clientLogger.debug(logStatement);\n      case LogLevel.INFO:\n        return this._clientLogger.info(logStatement);\n      case LogLevel.WARN:\n        return this._clientLogger.warn(logStatement);\n      case LogLevel.ERROR:\n        return this._clientLogger.error(logStatement);\n    }\n  }\n\n  isLevelEnabled(level) {\n    return level >= this._level;\n  }\n\n  hasClientLogger() {\n    return this._clientLogger !== null;\n  }\n\n  getLogger(options) {\n    var prefix = options.prefix || \"\";\n    if (this._logsDestination === LOGS_DESTINATION.DEBUG) {\n      return this.consoleLoggerWrapper;\n    }\n    return new LoggerWrapperImpl(prefix);\n  }\n\n  updateLoggerConfig(inputConfig) {\n    var config = inputConfig || {};\n    this._level = config.level || LogLevel.DEBUG;\n    this._clientLogger = config.logger || null;\n    this._logsDestination = LOGS_DESTINATION.NULL;\n    if (config.debug) {\n      this._logsDestination = LOGS_DESTINATION.DEBUG;\n    }\n    if (config.logger) {\n      this._logsDestination = LOGS_DESTINATION.CLIENT_LOGGER;\n    }\n  }\n}\n\nclass LoggerWrapper {\n  debug() {}\n\n  info() {}\n\n  warn() {}\n\n  error() {}\n}\n\nclass LoggerWrapperImpl extends LoggerWrapper {\n  constructor(prefix) {\n    super();\n    this.prefix = prefix || \"\";\n  }\n\n  debug(...args) {\n    this._log(LogLevel.DEBUG, args);\n  }\n\n  info(...args) {\n    this._log(LogLevel.INFO, args);\n  }\n\n  warn(...args) {\n    this._log(LogLevel.WARN, args);\n  }\n\n  error(...args) {\n    this._log(LogLevel.ERROR, args);\n  }\n\n  _shouldLog(level) {\n    return LogManager.hasClientLogger() && LogManager.isLevelEnabled(level);\n  }\n\n  _writeToClientLogger(level, logStatement) {\n    LogManager.writeToClientLogger(level, logStatement);\n  }\n\n  _log(level, args) {\n    if (this._shouldLog(level)) {\n      var logStatement = this._convertToSingleStatement(args);\n      this._writeToClientLogger(level, logStatement);\n    }\n  }\n\n  _convertToSingleStatement(args) {\n    var logStatement = \"\";\n    if (this.prefix) {\n      logStatement += this.prefix + \" \";\n    }\n    for (var index = 0; index < args.length; index++) {\n      var arg = args[index];\n      logStatement += this._convertToString(arg) + \" \";\n    }\n    return logStatement;\n  }\n\n  _convertToString(arg) {\n    try {\n      if (!arg) {\n        return \"\";\n      }\n      if (Utils.isString(arg)) {\n        return arg;\n      }\n      if (Utils.isObject(arg) && Utils.isFunction(arg.toString)) {\n        var toStringResult = arg.toString();\n        if (toStringResult !== \"[object Object]\") {\n          return toStringResult;\n        }\n      }\n      return JSON.stringify(arg);\n    } catch (error) {\n      console.error(\"Error while converting argument to string\", arg, error);\n      return \"\";\n    }\n  }\n}\n\nvar createConsoleLogger = () => {\n  var logger = new LoggerWrapper();\n  logger.debug = console.debug;\n  logger.info = console.info;\n  logger.warn = console.warn;\n  logger.error = console.error;\n  return logger;\n};\n\nconst LogManager = new LogManagerImpl();\n\nexport { LogManager, Logger, LogLevel };\n","import Utils from \"./utils\";\nimport { LogManager, LogLevel, Logger } from \"./log\";\nimport {\n    MIN_WEBSOCKET_LIFETIME_MS,\n    GET_WEBSOCKET_CONNECTION_INTERVAL_MS,\n    WEBSOCKET_URL_VALID_TIME_MS,\n    HEARTBEAT_INTERVAL_MS,\n    ROUTE_KEY,\n    CONN_STATE,\n    MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS,\n    TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS,\n    MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS,\n    MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE,\n    NETWORK_CONN_CHECK_INTERVAL_MS,\n    WEBSOCKET_REINIT_JITTER,\n    WEBSOCKET_CONN_CONFIG_JITTER\n} from \"./constants\";\n\n\nconst WebSocketManager = function() {\n\n    const logger = LogManager.getLogger({});\n\n    let online = Utils.isNetworkOnline();\n\n    let webSocket = {\n        primary: null,\n        secondary: null\n    };\n\n    let reconnectConfig = {\n        reconnectWebSocket: true,\n        websocketInitFailed: false,\n        exponentialBackOffTime: 1000,\n        exponentialTimeoutHandle: null,\n        lifeTimeTimeoutHandle: null,\n        webSocketInitCheckerTimeoutId: null,\n        connState: null\n    };\n\n    let metrics = {\n        connectWebSocketRetryCount: 0,\n        connectionAttemptStartTime: null,\n        noOpenConnectionsTimestamp: null\n    };\n\n    let heartbeatConfig = {\n        pendingResponse: false,\n        intervalHandle: null\n    };\n\n    let callbacks = {\n        initFailure: new Set(),\n        getWebSocketTransport: null,\n        subscriptionUpdate: new Set(),\n        subscriptionFailure: new Set(),\n        topic: new Map(),\n        allMessage: new Set(),\n        connectionGain: new Set(),\n        connectionLost: new Set(),\n        connectionOpen: new Set(),\n        connectionClose: new Set()\n    };\n\n    let webSocketConfig = {\n        connConfig: null,\n        promiseHandle: null,\n        promiseCompleted: true\n    };\n\n    let topicSubscription = {\n        subscribed: new Set(),\n        pending: new Set(),\n        subscriptionHistory: new Set()\n    };\n\n    let topicSubscriptionConfig = {\n        responseCheckIntervalId: null,\n        requestCompleted: true,\n        reSubscribeIntervalId: null,\n        consecutiveFailedSubscribeAttempts: 0,\n        consecutiveNoResponseRequest: 0\n    };\n\n    const invalidSendMessageRouteKeys = new Set([ROUTE_KEY.SUBSCRIBE, ROUTE_KEY.UNSUBSCRIBE, ROUTE_KEY.HEARTBEAT]);\n\n    const networkConnectivityChecker = setInterval(function () {\n        if (online !== Utils.isNetworkOnline()) {\n            online = Utils.isNetworkOnline();\n            if (!online) {\n                logger.info(\"Network offline\");\n                return;\n            }\n            const ws = getDefaultWebSocket();\n            if (online && (!ws || isWebSocketState(ws, WebSocket.CLOSING) || isWebSocketState(ws, WebSocket.CLOSED))) {\n                logger.info(\"Network online, connecting to WebSocket server\");\n                getWebSocketConnConfig();\n            }\n        }\n    }, NETWORK_CONN_CHECK_INTERVAL_MS);\n\n    const invokeCallbacks = function(callbacks, response) {\n        callbacks.forEach(function (callback) {\n            try {\n                callback(response);\n            } catch (error) {\n                logger.error(\"Error executing callback\", error);\n            }\n        });\n    };\n\n    const getWebSocketStates = function(ws) {\n        if (ws === null) return \"NULL\";\n        switch (ws.readyState) {\n            case WebSocket.CONNECTING:\n                return \"CONNECTING\";\n            case WebSocket.OPEN:\n                return \"OPEN\";\n            case WebSocket.CLOSING:\n                return \"CLOSING\";\n            case WebSocket.CLOSED:\n                return \"CLOSED\";\n            default:\n                return \"UNDEFINED\";\n        }\n    };\n\n    const printWebSocketState = function (event = \"\") {\n        logger.debug(\"[\" + event + \"] Primary WebSocket: \" + getWebSocketStates(webSocket.primary)\n            + \" | \" + \"Secondary WebSocket: \" + getWebSocketStates(webSocket.secondary) );\n    };\n\n    const isWebSocketState = function(ws, webSocketStateCode) {\n        return ws && ws.readyState === webSocketStateCode;\n    };\n\n    const isWebSocketOpen = function(ws) {\n        return isWebSocketState(ws, WebSocket.OPEN);\n    };\n\n    const isWebSocketClosed = function(ws) {\n        // undefined check is to address the limitation of testing framework\n        return ws === null || ws.readyState === undefined || isWebSocketState(ws, WebSocket.CLOSED);\n    };\n\n    /**\n     * This function is meant to handle the scenario when we have two web-sockets open\n     * in such a scenario we always select secondary web-socket since all future operations\n     * are supposed to be done by this secondary web-socket\n     */\n    const getDefaultWebSocket = function() {\n        if (webSocket.secondary !== null) {\n            return webSocket.secondary;\n        }\n        return webSocket.primary;\n    };\n\n    const isDefaultWebSocketOpen = function() {\n        return isWebSocketOpen(getDefaultWebSocket());\n    };\n\n    const sendHeartBeat = function() {\n        if (heartbeatConfig.pendingResponse) {\n            logger.warn(\"Heartbeat response not received\");\n            clearInterval(heartbeatConfig.intervalHandle);\n            heartbeatConfig.pendingResponse = false;\n            getWebSocketConnConfig();\n            return;\n        }\n        if (isDefaultWebSocketOpen()) {\n            logger.debug(\"Sending heartbeat\");\n            getDefaultWebSocket().send(createWebSocketPayload(ROUTE_KEY.HEARTBEAT));\n            heartbeatConfig.pendingResponse = true;\n        } else {\n            logger.warn(\"Failed to send heartbeat since WebSocket is not open\");\n            printWebSocketState(\"sendHeartBeat\");\n            getWebSocketConnConfig();\n        }\n    };\n\n    const resetWebSocketState = function() {\n        reconnectConfig.exponentialBackOffTime = 1000;\n        heartbeatConfig.pendingResponse = false;\n        reconnectConfig.reconnectWebSocket = true;\n\n        clearTimeout(reconnectConfig.lifeTimeTimeoutHandle);\n        clearInterval(heartbeatConfig.intervalHandle);\n        clearTimeout(reconnectConfig.exponentialTimeoutHandle);\n        clearTimeout(reconnectConfig.webSocketInitCheckerTimeoutId);\n    };\n\n    const resetSubscriptions = function() {\n        topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n        topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n        clearInterval(topicSubscriptionConfig.responseCheckIntervalId);\n        clearInterval(topicSubscriptionConfig.reSubscribeIntervalId);\n    };\n\n    const resetMetrics = function() {\n        metrics.connectWebSocketRetryCount = 0;\n        metrics.connectionAttemptStartTime = null;\n        metrics.noOpenConnectionsTimestamp = null;\n    };\n\n    const webSocketOnOpen = function() {\n        try {\n            logger.info(\"WebSocket connection established!\");\n            printWebSocketState(\"webSocketOnOpen\");\n            reconnectConfig.connState = CONN_STATE.CONNECTED;\n\n            if (webSocket.secondary === null) {\n                invokeCallbacks(callbacks.connectionGain);\n            }\n\n            // Report number of retries to open and record ws open time\n            const now = Date.now();\n            invokeCallbacks(callbacks.connectionOpen, {\n                connectWebSocketRetryCount: metrics.connectWebSocketRetryCount,\n                connectionAttemptStartTime: metrics.connectionAttemptStartTime,\n                noOpenConnectionsTimestamp: metrics.noOpenConnectionsTimestamp,\n                connectionEstablishedTime: now,\n                timeToConnect: now - metrics.connectionAttemptStartTime,\n                timeWithoutConnection:\n                    metrics.noOpenConnectionsTimestamp ? now - metrics.noOpenConnectionsTimestamp : null\n            });\n\n            resetMetrics();\n            resetWebSocketState();\n            getDefaultWebSocket().openTimestamp = Date.now(); // record open time\n\n            // early closure of primary web socket\n            if (topicSubscription.subscribed.size === 0 && isWebSocketOpen(webSocket.secondary)) {\n                closeSpecificWebSocket(webSocket.primary, \"[Primary WebSocket] Closing WebSocket\");\n            }\n            if (topicSubscription.subscribed.size > 0 || topicSubscription.pending.size > 0) {\n                if (isWebSocketOpen(webSocket.secondary)) {\n                    logger.info(\"Subscribing secondary websocket to topics of primary websocket\");\n                }\n                topicSubscription.subscribed.forEach(topic => {\n                    topicSubscription.subscriptionHistory.add(topic);\n                    topicSubscription.pending.add(topic);\n                });\n                topicSubscription.subscribed.clear();\n                subscribePendingTopics();\n            }\n\n            sendHeartBeat();\n            heartbeatConfig.intervalHandle = setInterval(sendHeartBeat, HEARTBEAT_INTERVAL_MS);\n\n            reconnectConfig.lifeTimeTimeoutHandle = setTimeout(function() {\n                logger.debug(\"Starting scheduled WebSocket manager reconnect\");\n                getWebSocketConnConfig();\n            }, webSocketConfig.connConfig.webSocketTransport.transportLifeTimeInSeconds * 1000);\n        } catch (error) {\n            logger.error(\"Error after establishing WebSocket connection\", error);\n        }\n    };\n\n    const webSocketOnClose = function(event, ws) {\n        logger.info(\"Socket connection is closed\", event);\n        printWebSocketState(\"webSocketOnClose before-cleanup\");\n\n        invokeCallbacks(callbacks.connectionClose, {\n            openTimestamp: ws.openTimestamp,\n            closeTimestamp: Date.now(),\n            connectionDuration: Date.now() - ws.openTimestamp,\n            code: event.code,\n            reason: event.reason\n        });\n\n        if (isWebSocketClosed(webSocket.primary)) {\n            webSocket.primary = null;\n        }\n        if (isWebSocketClosed(webSocket.secondary)) {\n            webSocket.secondary = null;\n        }\n        if (!reconnectConfig.reconnectWebSocket) {\n            return;\n        }\n        if (!isWebSocketOpen(webSocket.primary) && !isWebSocketOpen(webSocket.secondary)) {\n            logger.warn(\"Neither primary websocket and nor secondary websocket have open connections, attempting to re-establish connection\");\n            if (reconnectConfig.connState !== CONN_STATE.DISCONNECTED) {\n                /**\n                 * This check is required in the scenario where WS Server shuts-down and closes all active\n                 * WS Client connections and WS Server takes about a minute to become active gain, in this\n                 * scenario WS Client's onClose is triggered and then WSM start reconnect logic immediately but all\n                 * connect request to WS Server would fail and WS Client's onError callback would be triggered\n                 * followed WS Client's onClose callback and hence \"connectionLost\" callback would be invoked several\n                 * times and this behavior is redundant\n                 */\n                invokeCallbacks(callbacks.connectionLost, {\n                    openTimestamp: ws.openTimestamp,\n                    closeTimestamp: Date.now(),\n                    connectionDuration: Date.now() - ws.openTimestamp,\n                    code: event.code,\n                    reason: event.reason\n                });\n                metrics.noOpenConnectionsTimestamp = Date.now();\n            } else {\n                logger.info(\"Ignoring connectionLost callback invocation\");\n            }\n            reconnectConfig.connState = CONN_STATE.DISCONNECTED;\n            getWebSocketConnConfig();\n        } else if (isWebSocketClosed(webSocket.primary) && isWebSocketOpen(webSocket.secondary)) {\n            logger.info(\"[Primary] WebSocket Cleanly Closed\");\n            webSocket.primary = webSocket.secondary;\n            webSocket.secondary = null;\n        }\n        printWebSocketState(\"webSocketOnClose after-cleanup\");\n    };\n\n    const webSocketOnError = function(event) {\n        printWebSocketState(\"webSocketOnError\");\n        logger.error(\"WebSocketManager Error, error_event: \", event);\n        getWebSocketConnConfig();\n    };\n\n    const webSocketOnMessage = function(event) {\n        const response = JSON.parse(event.data);\n\n        switch (response.topic) {\n\n            case ROUTE_KEY.SUBSCRIBE:\n                logger.debug(\"Subscription Message received from webSocket server\", event.data);\n                topicSubscriptionConfig.requestCompleted = true;\n                topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n\n                if (response.content.status === \"success\") {\n                    topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n                    response.content.topics.forEach( topicName => {\n                        topicSubscription.subscriptionHistory.delete(topicName);\n                        topicSubscription.pending.delete(topicName);\n                        topicSubscription.subscribed.add(topicName);\n                    });\n                    if (topicSubscription.subscriptionHistory.size === 0) {\n                        if (isWebSocketOpen(webSocket.secondary)) {\n                            logger.info(\"Successfully subscribed secondary websocket to all topics of primary websocket\");\n                            closeSpecificWebSocket(webSocket.primary, \"[Primary WebSocket] Closing WebSocket\");\n                        }\n                    } else {\n                        subscribePendingTopics();\n                    }\n                    invokeCallbacks(callbacks.subscriptionUpdate, response);\n\n                } else {\n                    clearInterval(topicSubscriptionConfig.reSubscribeIntervalId);\n                    ++topicSubscriptionConfig.consecutiveFailedSubscribeAttempts;\n                    if (topicSubscriptionConfig.consecutiveFailedSubscribeAttempts === MAX_CONSECUTIVE_FAILED_SUB_ATTEMPTS) {\n                        invokeCallbacks(callbacks.subscriptionFailure, response);\n                        topicSubscriptionConfig.consecutiveFailedSubscribeAttempts = 0;\n                        return;\n                    }\n                    topicSubscriptionConfig.reSubscribeIntervalId = setInterval(function () {\n                        subscribePendingTopics();\n                    }, TOPIC_SUBSCRIPTION_RETRY_INTERVAL_MS);\n                }\n                break;\n\n            case ROUTE_KEY.HEARTBEAT:\n                logger.debug(\"Heartbeat response received\");\n                heartbeatConfig.pendingResponse = false;\n                break;\n\n            default:\n                if (response.topic) {\n                    logger.debug(\"Message received for topic \" + response.topic);\n                    if (isWebSocketOpen(webSocket.primary) && isWebSocketOpen(webSocket.secondary)\n                        && topicSubscription.subscriptionHistory.size === 0 && this === webSocket.primary) {\n                        /**\n                         * This block is to handle scenario when both primary and secondary socket have subscribed to\n                         * a common topic but we are facing difficulty in closing the primary socket, then in this\n                         * situation messages will be received by both primary and secondary web socket\n                         */\n                        logger.warn(\"Ignoring Message for Topic \" + response.topic + \", to avoid duplicates\");\n                        return;\n                    }\n\n                    if (callbacks.allMessage.size === 0 && callbacks.topic.size === 0) {\n                        logger.warn('No registered callback listener for Topic', response.topic);\n                        return;\n                    }\n                    invokeCallbacks(callbacks.allMessage, response);\n                    if (callbacks.topic.has(response.topic)) {\n                        invokeCallbacks(callbacks.topic.get(response.topic), response);\n                    }\n\n                } else if (response.message) {\n                    logger.warn(\"WebSocketManager Message Error\", response);\n                } else {\n                    logger.warn(\"Invalid incoming message\", response);\n                }\n        }\n    };\n\n    const subscribePendingTopics = function() {\n        if (topicSubscriptionConfig.consecutiveNoResponseRequest > MAX_CONSECUTIVE_SUB_REQUEST_WITH_NO_RESPONSE) {\n            logger.warn(\"Ignoring subscribePendingTopics since we have exhausted max subscription retries with no response\");\n            invokeCallbacks(callbacks.subscriptionFailure, Utils.getSubscriptionResponse(ROUTE_KEY.SUBSCRIBE, false, Array.from(topicSubscription.pending)));\n            return;\n        }\n        if (!isDefaultWebSocketOpen()) {\n            logger.warn(\"Ignoring subscribePendingTopics call since Default WebSocket is not open\");\n            return;\n        }\n\n        clearInterval(topicSubscriptionConfig.responseCheckIntervalId);\n\n        getDefaultWebSocket().send(createWebSocketPayload(ROUTE_KEY.SUBSCRIBE, {\n            \"topics\": Array.from(topicSubscription.pending)\n        }));\n        topicSubscriptionConfig.requestCompleted = false;\n\n        // This callback ensure that some response was received for subscription request\n        topicSubscriptionConfig.responseCheckIntervalId = setInterval(function () {\n            if (!topicSubscriptionConfig.requestCompleted) {\n                ++topicSubscriptionConfig.consecutiveNoResponseRequest;\n                subscribePendingTopics();\n            }\n        }, MAX_WAIT_TIME_SUB_REQUEST_WITH_NO_RESPONSE_MS);\n    };\n\n    const closeSpecificWebSocket = function(ws, reason) {\n        if (isWebSocketState(ws, WebSocket.CONNECTING) || isWebSocketState(ws, WebSocket.OPEN)) {\n            ws.close(1000, reason);\n        } else {\n            logger.warn(\"Ignoring WebSocket Close request, WebSocket State: \" + getWebSocketStates(ws));\n        }\n    };\n\n    const closeWebSocket = function(reason) {\n        closeSpecificWebSocket(webSocket.primary, \"[Primary] WebSocket \" + reason);\n        closeSpecificWebSocket(webSocket.secondary, \"[Secondary] WebSocket \" + reason);\n    };\n\n    const retryWebSocketInitialization = function () {\n        metrics.connectWebSocketRetryCount++;\n        const waitTime = Utils.addJitter(reconnectConfig.exponentialBackOffTime, WEBSOCKET_REINIT_JITTER);\n        if (Date.now() + waitTime <= webSocketConfig.connConfig.urlConnValidTime) {\n            logger.debug(\"Scheduling WebSocket reinitialization, after delay \" + waitTime + \" ms\");\n            reconnectConfig.exponentialTimeoutHandle = setTimeout(() => initWebSocket(), waitTime);\n            reconnectConfig.exponentialBackOffTime *= 2;\n        } else {\n            logger.warn(\"WebSocket URL is cannot be used to establish connection\");\n            getWebSocketConnConfig();\n        }\n    };\n\n    const terminateWebSocketManager = function (response) {\n        resetWebSocketState();\n        resetSubscriptions();\n        logger.error(\"WebSocket Initialization failed\");\n        reconnectConfig.websocketInitFailed = true;\n        closeWebSocket(\"Terminating WebSocket Manager\");\n        clearInterval(networkConnectivityChecker);\n        invokeCallbacks(callbacks.initFailure, {\n            connectWebSocketRetryCount: metrics.connectWebSocketRetryCount,\n            connectionAttemptStartTime: metrics.connectionAttemptStartTime,\n            reason: response\n        });\n        resetMetrics();\n    };\n\n    const createWebSocketPayload = function (key, content) {\n        return JSON.stringify({\n            \"topic\": key,\n            \"content\": content\n        });\n    };\n\n    const sendMessage = function(payload) {\n        Utils.assertIsObject(payload, \"payload\");\n        if (payload.topic === undefined || invalidSendMessageRouteKeys.has(payload.topic)) {\n            logger.warn(\"Cannot send message, Invalid topic\", payload);\n            return;\n        }\n        try {\n            payload = JSON.stringify(payload);\n        } catch (error) {\n            logger.warn(\"Error stringify message\", payload);\n            return;\n        }\n        if (isDefaultWebSocketOpen()) {\n            getDefaultWebSocket().send(payload);\n        } else {\n            logger.warn(\"Cannot send message, web socket connection is not open\");\n        }\n    };\n\n    const subscribeTopics = function(topics) {\n        Utils.assertNotNull(topics, 'topics');\n        Utils.assertIsList(topics);\n\n        topics.forEach(topic => {\n            if (!topicSubscription.subscribed.has(topic)) {\n                topicSubscription.pending.add(topic);\n            }\n        });\n        // This ensure all participant-request to subscribe to topic chat are served at least once\n        topicSubscriptionConfig.consecutiveNoResponseRequest = 0;\n        subscribePendingTopics();\n    };\n\n    const validWebSocketConnConfig = function (connConfig) {\n        if (Utils.isObject(connConfig) && Utils.isObject(connConfig.webSocketTransport)\n            && Utils.isNonEmptyString(connConfig.webSocketTransport.url)\n            && Utils.validWSUrl(connConfig.webSocketTransport.url) &&\n            connConfig.webSocketTransport.transportLifeTimeInSeconds * 1000 >= MIN_WEBSOCKET_LIFETIME_MS) {\n            return true;\n        }\n        logger.error(\"Invalid WebSocket Connection Configuration\", connConfig);\n        return false;\n    };\n\n    const getWebSocketConnConfig = function () {\n        if (!Utils.isNetworkOnline()) {\n            logger.info(\"Network offline, ignoring this getWebSocketConnConfig request\");\n            return;\n        }\n        if (reconnectConfig.websocketInitFailed) {\n            logger.debug(\"WebSocket Init had failed, ignoring this getWebSocketConnConfig request\");\n            return;\n        }\n        if (!webSocketConfig.promiseCompleted) {\n            logger.debug(\"There is an ongoing getWebSocketConnConfig request, this request will be ignored\");\n            return;\n        }\n        resetWebSocketState();\n        logger.info(\"Fetching new WebSocket connection configuration\");\n        metrics.connectionAttemptStartTime = metrics.connectionAttemptStartTime || Date.now();\n        webSocketConfig.promiseCompleted = false;\n        webSocketConfig.promiseHandle = callbacks.getWebSocketTransport();\n        return webSocketConfig.promiseHandle\n            .then(function(response) {\n                    webSocketConfig.promiseCompleted = true;\n                    logger.debug(\"Successfully fetched webSocket connection configuration\", response);\n                    if (!validWebSocketConnConfig(response)) {\n                        terminateWebSocketManager(\"Invalid WebSocket connection configuration: \" + response);\n                        return { webSocketConnectionFailed: true };\n                    }\n                    webSocketConfig.connConfig = response;\n                    // Ideally this URL validity time should be provided by server\n                    webSocketConfig.connConfig.urlConnValidTime = Date.now() + WEBSOCKET_URL_VALID_TIME_MS;\n                    return initWebSocket();\n                },\n                function(reason) {\n                    webSocketConfig.promiseCompleted = true;\n                    logger.error(\"Failed to fetch webSocket connection configuration\", reason);\n                    setTimeout(() => getWebSocketConnConfig(), Utils.addJitter(GET_WEBSOCKET_CONNECTION_INTERVAL_MS, WEBSOCKET_CONN_CONFIG_JITTER));\n                    return { webSocketConnectionFailed: true };\n                });\n    };\n\n    const initWebSocket = function() {\n        if (reconnectConfig.websocketInitFailed) {\n            logger.info(\"web-socket initializing had failed, aborting re-init\");\n            return { webSocketConnectionFailed: true };\n        }\n        if (!Utils.isNetworkOnline()) {\n            logger.warn(\"System is offline aborting web-socket init\");\n            return { webSocketConnectionFailed: true };\n        }\n        logger.info(\"Initializing Websocket Manager\");\n        printWebSocketState(\"initWebSocket\");\n        try {\n            if (validWebSocketConnConfig(webSocketConfig.connConfig)) {\n                let ws = null;\n                if (isWebSocketOpen(webSocket.primary)) {\n                    logger.debug(\"Primary Socket connection is already open\");\n                    if (!isWebSocketState(webSocket.secondary, WebSocket.CONNECTING)) {\n                        logger.debug(\"Establishing a secondary web-socket connection\");\n                        webSocket.secondary = getNewWebSocket();\n                    }\n                    ws = webSocket.secondary;\n                } else {\n                    if (!isWebSocketState(webSocket.primary, WebSocket.CONNECTING)) {\n                        logger.debug(\"Establishing a primary web-socket connection\");\n                        webSocket.primary = getNewWebSocket();\n                    }\n                    ws = webSocket.primary;\n                }\n\n                // WebSocket creation is async task hence we Wait for 1sec before any potential retry\n                reconnectConfig.webSocketInitCheckerTimeoutId = setTimeout(function() {\n                    if (!isWebSocketOpen(ws)) {\n                        retryWebSocketInitialization();\n                    }\n                }, 1000);\n                return { webSocketConnectionFailed: false };\n            }\n        } catch (error) {\n            logger.error(\"Error Initializing web-socket-manager\", error);\n            terminateWebSocketManager(\"Failed to initialize new WebSocket: \" + error.message);\n            return { webSocketConnectionFailed: true };\n        }\n    };\n\n    const getNewWebSocket = function() {\n        let ws = new WebSocket(webSocketConfig.connConfig.webSocketTransport.url);\n        ws.addEventListener(\"open\", webSocketOnOpen);\n        ws.addEventListener(\"message\", webSocketOnMessage);\n        ws.addEventListener(\"error\", webSocketOnError);\n        ws.addEventListener(\"close\", event => webSocketOnClose(event, ws));\n        return ws;\n    };\n\n    const onConnectionOpen = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionOpen.add(cb);\n        return () => callbacks.connectionOpen.delete(cb);\n    };\n\n    const onConnectionClose = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionClose.add(cb);\n        return () => callbacks.connectionClose.delete(cb);\n    };\n\n    const onConnectionGain = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionGain.add(cb);\n        if (isDefaultWebSocketOpen()) {\n            cb();\n        }\n        return () => callbacks.connectionGain.delete(cb);\n    };\n\n    const onConnectionLost = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.connectionLost.add(cb);\n        if (reconnectConfig.connState === CONN_STATE.DISCONNECTED) {\n            cb();\n        }\n        return () => callbacks.connectionLost.delete(cb);\n    };\n\n    const onInitFailure = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.initFailure.add(cb);\n        if (reconnectConfig.websocketInitFailed) {\n            cb();\n        }\n        return () => callbacks.initFailure.delete(cb);\n    };\n\n    const init = function(transportHandle) {\n        Utils.assertTrue(Utils.isFunction(transportHandle), 'transportHandle must be a function');\n        if (callbacks.getWebSocketTransport !== null) {\n            logger.warn(\"Web Socket Manager was already initialized\");\n            return;\n        }\n        callbacks.getWebSocketTransport = transportHandle;\n\n        return getWebSocketConnConfig();\n    };\n\n    const onSubscriptionUpdate = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.subscriptionUpdate.add(cb);\n        return () => callbacks.subscriptionUpdate.delete(cb);\n    };\n\n    const onSubscriptionFailure = function(cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.subscriptionFailure.add(cb);\n        return () => callbacks.subscriptionFailure.delete(cb);\n    };\n\n    const onMessage = function(topicName, cb) {\n        Utils.assertNotNull(topicName, 'topicName');\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        if (callbacks.topic.has(topicName)) {\n            callbacks.topic.get(topicName).add(cb);\n        } else {\n            callbacks.topic.set(topicName, new Set([cb]));\n        }\n        return () => callbacks.topic.get(topicName).delete(cb);\n    };\n\n    const onAllMessage = function (cb) {\n        Utils.assertTrue(Utils.isFunction(cb), 'cb must be a function');\n        callbacks.allMessage.add(cb);\n        return () => callbacks.allMessage.delete(cb);\n    };\n\n    this.init = init;\n    this.onInitFailure = onInitFailure;\n    this.onConnectionOpen = onConnectionOpen;\n    this.onConnectionClose = onConnectionClose;\n    this.onConnectionGain = onConnectionGain;\n    this.onConnectionLost = onConnectionLost;\n    this.onSubscriptionUpdate = onSubscriptionUpdate;\n    this.onSubscriptionFailure = onSubscriptionFailure;\n    this.onMessage = onMessage;\n    this.onAllMessage = onAllMessage;\n    this.subscribeTopics = subscribeTopics;\n    this.sendMessage = sendMessage;\n\n    this.closeWebSocket = function() {\n        resetWebSocketState();\n        resetSubscriptions();\n        reconnectConfig.reconnectWebSocket = false;\n        clearInterval(networkConnectivityChecker);\n        closeWebSocket(\"User request to close WebSocket\");\n    };\n\n    this.terminateWebSocketManager = terminateWebSocketManager;\n};\n\nconst WebSocketManagerConstructor = () => {\n    return new WebSocketManager();\n};\n\nconst setGlobalConfig = config => {\n    const loggerConfig = config.loggerConfig;\n    LogManager.updateLoggerConfig(loggerConfig);\n};\n\nconst WebSocketManagerObject = {\n    create: WebSocketManagerConstructor,\n    setGlobalConfig: setGlobalConfig,\n    LogLevel: LogLevel,\n    Logger: Logger\n};\n\nexport { WebSocketManagerObject };","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[+-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, ph, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (typeof parse_tree[i] === 'object') {\n                ph = parse_tree[i] // convenience purposes only\n                if (ph.keys) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < ph.keys.length; k++) {\n                        if (arg == undefined) {\n                            throw new Error(sprintf('[sprintf] Cannot access property \"%s\" of undefined value \"%s\"', ph.keys[k], ph.keys[k-1]))\n                        }\n                        arg = arg[ph.keys[k]]\n                    }\n                }\n                else if (ph.param_no) { // positional argument (explicit)\n                    arg = argv[ph.param_no]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(ph.type) && re.not_primitive.test(ph.type) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(ph.type) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(ph.type)) {\n                    is_positive = arg >= 0\n                }\n\n                switch (ph.type) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, ph.width ? parseInt(ph.width) : 0)\n                        break\n                    case 'e':\n                        arg = ph.precision ? parseFloat(arg).toExponential(ph.precision) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = ph.precision ? parseFloat(arg).toFixed(ph.precision) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = ph.precision ? String(Number(arg.toPrecision(ph.precision))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (ph.precision ? arg.substring(0, ph.precision) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(ph.type)) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(ph.type) && (!is_positive || ph.sign)) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = ph.pad_char ? ph.pad_char === '0' ? '0' : ph.pad_char.charAt(1) : ' '\n                    pad_length = ph.width - (sign + arg).length\n                    pad = ph.width ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += ph.align ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n\n                parse_tree.push(\n                    {\n                        placeholder: match[0],\n                        param_no:    match[1],\n                        keys:        match[2],\n                        sign:        match[3],\n                        pad_char:    match[4],\n                        align:       match[5],\n                        width:       match[6],\n                        precision:   match[7],\n                        type:        match[8]\n                    }\n                )\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}(); // eslint-disable-line\n","/*eslint no-unused-vars: \"off\"*/\nimport { WebSocketManagerObject } from \"./webSocketManager\";\n\nglobal.connect = global.connect || {};\nconnect.WebSocketManager = WebSocketManagerObject;\n\nexport const WebSocketManager = WebSocketManagerObject;\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n"],"sourceRoot":""}